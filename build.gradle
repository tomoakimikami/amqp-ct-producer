buildscript {
  ext { springBootVersion = '1.3.5.RELEASE' }
  repositories {
    mavenCentral()
    mavenLocal()
  }
  dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
  baseName = 'amqp-ct-producer'
  version = '0.0.1-SNAPSHOT'
}

springBoot { executable = true }

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories { mavenCentral() }


dependencies {
  compile('org.springframework.boot:spring-boot-autoconfigure')
  compile('org.springframework.boot:spring-boot-starter-amqp')
  compile('org.springframework.boot:spring-boot-starter-batch')
  compile('org.springframework.boot:spring-boot-starter-jdbc')
  compile('org.springframework.boot:spring-boot-starter-aop')
  compile('org.projectlombok:lombok:1.16.6')
  compile('com.fasterxml.jackson.core:jackson-databind')
  compile files('libs/spring-rabbit-support-1.0.0-SNAPSHOT.jar')
  testCompile('org.springframework.boot:spring-boot-starter-test')
  runtime('com.googlecode.log4jdbc:log4jdbc:1.2')
  runtime files('libs/ojdbc7-12.1.0.2.0.jar')
}


import org.gradle.plugins.ide.eclipse.model.SourceFolder
eclipse {
  project {
    // nature の追加

    // spring project nature を追加
    natures 'org.springframework.ide.eclipse.core.springnature'

    // Gradle nature を追加
    natures 'org.springsource.ide.eclipse.gradle.core.nature'

    // buildCommand の追加
    // spring のbuildCommand を追加
    buildCommand 'org.springframework.ide.eclipse.core.springbuilder'
  }
  classpath {
    // 依存している jar の source と javadoc をダウンロードする
    downloadSources = true    // デフォルトは false
    downloadJavadoc = true    // javadoc のパスは絶対パスになる

    // Java のビルドパスにサーバー・ランタイムを追加
    containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
    containers 'org.eclipse.jst.server.core.container/org.eclipse.jst.server.tomcat.runtimeTarget/Apache Tomcat v8.0'
  }
}

task wrapper(type: Wrapper) { gradleVersion = '2.12' }
